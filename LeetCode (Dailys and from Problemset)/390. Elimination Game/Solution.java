class Solution {
  public int lastRemaining(int n) {
    boolean left = true;
    int remaining = n;
    int step = 1;
    int head = 1;
    while (remaining > 1) {
      if (left || remaining % 2 == 1) {
        head = head + step;
      }
      remaining /= 2;
      step *= 2;
      left = !left;
    }
    return head;
  }
}

// Test 1:
// n = 3
// arr = [1, 2, 3]
// if size is odd then removes n/2 + 1

// Test 2:
// n = 4
// arr = [1, 2, 3, 4]
// if size is even then removes n/2
// arr = [2, 4]
// still removes n/2

// Test 3:
// n = 15
// arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
// arr = [2, 4, 6, 8, 10, 12, 14]
// arr = [4, 8, 12]
// arr = [8]

// Test 3:
// n = 16
// arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
// arr = [2, 4, 6, 8, 10, 12, 14, 16]
// arr = [2, 6, 10, 14]
// arr = [6, 14]
// arr = [6]

// Test 4:
// n = 44
// 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 | ->
//   2   4   6   8   10    12    14    16    18    20    22    24    26    28    30    32    34    36    38    40    42    44 | <-
//   2       6       10          14          18          22          26          30          34          38          42       | ->
//           6                   14                      22                      30                      38                   | <-
//                               14                                              30                                           | ->
//                                                                               30                                           | X

// Test 5:
// n = 45
// 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 | ->
//   2   4   6   8   10    12    14    16    18    20    22    24    26    28    30    32    34    36    38    40    42    44    | <-
//   2       6       10          14          18          22          26          30          34          38          42          | ->
//           6                   14                      22                      30                      38                      | <-
//                               14                                              30                                              | ->
//                                                                               30                                              | X

// Test 6:
// n = 46
// 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 | ->
//   2   4   6   8   10    12    14    16    18    20    22    24    26    28    30    32    34    36    38    40    42    44    46 | <-
//       4       8         12          16          20          24          28          32          36          40          44       | ->
//               8                     16                      24                      32                      40                   | <-
//                                     16                                              32                                           | ->
//                                                                                     32                                           | X

// Right move: array size is / 2 if even, / 2 - 1 if odd
// Left move: array size is / 2 if even, / 2 - 1 if odd
